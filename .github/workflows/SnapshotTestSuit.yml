name: "Snapshot Test Suit"

on: [push]

jobs:
  xcode-ios:
    name: "${{ matrix.env.name }}"
    runs-on: macos-11
    strategy:
      matrix:
        env:
          - name: "Test iOS 15.2"
            runtime: "iOS-15-2"
            device: "iPhone 8"
            task: "testLTRCurrentOS"
          - name: "Test RTL iOS 15.2"
            runtime: "iOS-15-2"
            device: "iPhone 8"
            task: "testRTLCurrentOS"
          - name: "Test iOS 13.7"
            runtime: "iOS-13-7"
            device: "iPhone 8"
            task: "testLTRPreviousOS"
          - name: "Test RTL iOS 13.7"
            runtime: "iOS-13-7"
            device: "iPhone 8"
            task: "testRTLPreviousOS"
    steps:
    - name: Git checkout
      uses: actions/checkout@v2
    - name: Link simulator runtimes
      run: |
        sudo mkdir -p /Library/Developer/CoreSimulator/Profiles/Runtimes
        sudo ln -s /Applications/Xcode_11.7.app/Contents/Developer/Platforms/iPhoneOS.platform/Library/Developer/CoreSimulator/Profiles/Runtimes/iOS.simruntime /Library/Developer/CoreSimulator/Profiles/Runtimes/iOS\ 13.7.simruntime
    - name: "Select Xcode 13.2.1"
      run: |
        ls -n /Applications/ | grep Xcode*
        sudo xcode-select -s /Applications/Xcode_13.2.1.app
        xcodebuild -version -sdk
        xcrun simctl list
    - name: Run tests
      if: always()
      run: |
        TASK="${{ matrix.env.task }}"
        RUNTIME="${{ matrix.env.runtime }}"
        DEVICE="${{ matrix.env.device }}"
        DEVICE_ID=com.apple.CoreSimulator.SimDeviceType.$(echo $DEVICE | sed -E -e "s/[ \-]+/ /g" -e "s/[^[:alnum:]]/-/g")
        RUNTIME_ID=com.apple.CoreSimulator.SimRuntime.$(echo $RUNTIME | sed -E -e "s/[ \-]+/ /g" -e "s/[^[:alnum:]]/-/g")
        DESTINATION_ID=$(xcrun simctl create "$DEVICE, $RUNTIME" $DEVICE_ID $RUNTIME_ID)
        xcrun simctl boot $DESTINATION_ID
        ./gradlew -q $TASK | xcpretty -c
        if [[ $? -eq 0 ]]; then
        echo "Tests passed!" >&2
        else
        echo "Tests failed!" >&2
        fi
      shell: bash